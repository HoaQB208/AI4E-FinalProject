@page "/"
@using FinalProject.Core.Data
@using FinalProject.Core._Class
@using Newtonsoft.Json
<PageTitle>ThaiHoaPham - FinalProject - AI4E</PageTitle>


<div style="background-image: url('/Background.jpg'); background-size: cover; background-repeat: no-repeat; height: 100vh; display: flex;">
    <div>
        <label for="symbol">Symbol</label>
        <input id="symbol" @bind="symbol" />
        <button @onclick="Predict">Predict</button>
    </div>

    <div>
        @result
    </div>
</div>


@code {
    private string symbol = "BTCUSDT";
    private string result = "";

    private async void Predict()
    {
        var klines = await Market.Download(symbol, Interval.H1, null, limit: 30);
        if (klines.Count > 12)
        {
            klines.Remove(klines.Last());

            List<float> pers = klines.Select(kline => (float)PriceUtils.Percent(kline.O, kline.C, 1)).ToList();
            DataRow dataRow = new()
                {
                    C0 = pers[^12],
                    C1 = pers[^11],
                    C2 = pers[^10],
                    C3 = pers[^9],
                    C4 = pers[^8],
                    C5 = pers[^7],
                    C6 = pers[^6],
                    C7 = pers[^5],
                    C8 = pers[^4],
                    C9 = pers[^3],
                    C10 = pers[^2],
                    C11 = pers[^1]
                };
            string data = JsonConvert.SerializeObject(dataRow);
            string url = "https://ai4e-server.azurewebsites.net/api/pre/" + data;
            string resultStr = await new HttpClient().GetStringAsync(url);
            if (!string.IsNullOrEmpty(resultStr))
            {
                Prediction? pre = JsonConvert.DeserializeObject<Prediction>(resultStr);
                if (pre != null)
                {
                    var last = klines.Last();
                    decimal openPrice = last.C;
                    decimal closePrice = openPrice * (1 + (decimal)pre.Score / 100);

                    string klineColor = pre.Score >= 0 ? "Green" : "Red";
                    result = $"Open Price: {openPrice}. Close Price: {closePrice:0.00000000}\nColor: {klineColor}";
                }
                else result = "No data received from Server!";
            }
            else result = "No data received from Server!";
        }
        else result = "Downloading Klines data failed!";

        StateHasChanged();
    }
}